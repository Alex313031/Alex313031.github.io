<!-- 
 * This file was automatically generated by Microsoft Internet Explorer 4.0 
 * using the file %THISDIRPATH%\folder.htt (if customized) or
 * %TEMPLATEDIR%\folder.htt (if not customized).
 -->

<html>
	<link rel=stylesheet href="%TEMPLATEDIR%\webview.css" title="Windows">
	<head>
		<!-- allow references to any resources you might add to the folder -->
		<!-- (a "webbot" is a special wrapper for FrontPage compatibility) -->
		<!-- webbot bot="HTMLMarkup" tag="base" startspan -->
		<base href="%THISDIRPATH%\">
		<!-- webbot bot="HTMLMarkup" endspan -->

		<script language="JavaScript">
			var L_Intro_Text	= "";
			var L_DUNName_Text	= "Dial-Up Networking";
			var L_DUNIntro_Text	= "This folder contains information about your dial-up networking connections, and a wizard to help you make a new connection.<br><br>To get information about a connection, right-click the connection's icon.<br><br>To make a new connection, click <b>Make New Connection</b> to start the Make New Connection wizard.";
			var L_MBName_Text	= "My Briefcase";
			var L_MBIntro_Text	= "This folder contains files you want to work on at a different computer.<br><br>Drag the files you want into this folder, and then transfer the folder to your laptop computer or a floppy disk. When you return, copy the My Briefcase folder you took with you to your Windows desktop.<br><br>To synchronize both copies of each file, click <b>Update All<b>.";
			var L_TIFName_Text	= "Temporary Internet Files";
			var L_TIFIntro_Text	= "This folder contains all the Web pages you have opened recently. The Web pages are copied to this folder, also called a 'cache,' so that if you open them again, they will be displayed more quickly.<br><br>If you need disk space, you can empty this folder by clicking the View menu in the browser, clicking Internet Options, and then clicking Delete Files. To adjust how much space the Temporary Internet Files folder takes up on your hard disk, click the Settings button.";
			var L_DPFName_Text	= "Downloaded Program Files";
			var L_DPFIntro_Text	= "This folder contains generally small files that are needed to display various Web pages that you have opened.<br><br>Most of these files help run animations on a Web page, such as pictures that move or change images or colors.<br><br>The files are placed in this folder when you open a Web page so that if you open the same page again, the page will be displayed more quickly.";
			var L_HName_Text	= "History";
			var L_HIntro_Text	= "This folder contains links to many of the Web pages you have recently opened. To return to a Web page in this list, just click the day you want to go back to, and then click the link for the appropriate page.<br><br>If you want to change the number of days that the history is saved, click the View menu in the browser, and then click Internet Options. On the General tab, change the setting for 'Days to keep pages in history.' Or, if you need more disk space, you can click Clear History to empty this folder.";
			var L_SName_Text	= "Subscriptions";
			var L_SIntro_Text	= "This folder contains links to all the Web sites you have subscribed to. To open a site, just click it.<br><br>To subscribe to a Web site, click the Favorites menu in the browser, click <b>Add to Favorites</b>, and then follow the instructions on the screen. Internet Explorer will notify you when the Web site has been updated.";
			var L_Multiple_Text	= " items selected.";
			var L_Size_Text		= "Size: ";
			var L_FileSize_Text	= "Total File Size: ";
			var L_Delimiter_Text	= ",";
			var L_Bytes_Text	= "&nbsp;bytes";
			var L_Attributes_Text	= "Attributes";
			var L_Codes_Text	= "RHSaCE"; // suppress the Archive flag
			var L_ReadOnly_Text 	= "Read-only";
			var L_Hidden_Text	= "Hidden";
			var L_System_Text	= "System";
			var L_Archive_Text	= "Archive";
			var L_Compressed_Text	= "Compressed";
			var L_Encrypted_Text	= "Encrypted";
			var L_NoAttributes_Text = "(normal)";
			var L_Properties_Text	= "P&roperties";
			var timer		= 0;
			var wantMedia		= false; // cool, but may hinder media file manipulation

			function FixSize() {
				// this function handles fixed panel sizing and collapsing when the window resizes
				var threshold	= 400;
				var miniHeight	= 32;
				var ch		= document.body.clientHeight;
				var cw		= document.body.clientWidth;

				if (cw < threshold) {
					document.all.Panel.style.visibility = "hidden";
					document.all.MiniBanner.style.visibility = "visible";
					document.all.FileList.style.top = miniHeight;
					document.all.FileList.style.pixelLeft = 0;
				} else {
					document.all.MiniBanner.style.visibility = "hidden";
					document.all.Panel.style.visibility = "visible";
					document.all.FileList.style.top = 0;
					document.all.FileList.style.pixelLeft = document.all.Panel.style.pixelWidth; 
				}
				document.all.FileList.style.pixelWidth = cw - document.all.FileList.style.pixelLeft;
				document.all.FileList.style.pixelHeight = ch - document.all.FileList.style.pixelTop;
			}

			function SetIntroText() {
				var name = "%THISDIRNAME%";

				if (name == L_DUNName_Text)
					L_Intro_Text = L_DUNIntro_Text;
				else if (name == L_MBName_Text)
					L_Intro_Text = L_MBIntro_Text;
				else if (name == L_TIFName_Text)
					L_Intro_Text = L_TIFIntro_Text;
				else if (name == L_DPFName_Text)
					L_Intro_Text = L_DPFIntro_Text;
				else if (name == L_HName_Text)
					L_Intro_Text = L_HIntro_Text;
				else if (name == L_SName_Text)
					L_Intro_Text = L_SIntro_Text;
			}

			function FormatNumber(n) {
				var t = "";
				var i, j = 0;
				for (i = n.length - 1; i >= 0; i--) {
					t = n.charAt(i) + t;
					if (i && ((++j % 3) == 0))
						t = L_Delimiter_Text + t;
				}
				return t;
			}

			function Properties() {
				FileList.SelectedItems().Item(0).InvokeVerb(L_Properties_Text);
			}

			function Init() {
				// call our FixSize() function whenever the window gets resized
				window.onresize = FixSize;
				FixSize();
				SetIntroText();
				Info.innerHTML = L_Intro_Text;
			}
		</script>

		<script language="JavaScript" for="FileList" event="SelectionChanged">
			// this script updates the left info panel when you select icons
			var fldr = FileList.Folder;
			var items;
			var name;
			var data;
			var text;
			var title;
			var size = 0;
			var i;

			// cancel any pending status message
			if (timer) {
				window.clearTimeout(timer);
				timer = 0;
			}

			// erase any visible thumbnail since the selection changed
			document.all.Thumbnail.style.display = "none";
			document.all.Status.style.display = "none";

			// stop & destroy any media player
			if (wantMedia)
				document.all.Media.innerHTML = "";

			data = FileList.SelectedItems().Count;
			if (data == 0 || "%THISDIRNAME%" == L_TIFName_Text) { // TIF folder is broken
				// nothing selected?
				Info.innerHTML = L_Intro_Text;
				return;
			}
			else if (data > 1) {
				// more than one item selected?
				text = data + L_Multiple_Text + "<br>";
				if (data <= 100) {
					for (i = 0; i < data; i++)
						size += FileList.SelectedItems().Item(i).Size;
					if (size)
						text += "<br>" + L_FileSize_Text + FormatNumber(size.toString()) + L_Bytes_Text + "<br>";
					if (data <= 16)
						for (i = 0; i < data; i++)
							text += "<br>" + FileList.SelectedItems().Item(i).Name;
				}
				Info.innerHTML = text;
				return;
			}

			items = FileList.SelectedItems().Item(0);

			// name
			name = fldr.GetDetailsOf(items, 0);
			if (!name)
				name = FileList.SelectedItems().Item(0).Name;
			if (name.substring(0, 2) == "\\\\")
				text = "<b>" + name.link(name) + "</b>";
			else
				text = "<b>" + name + "</b>";

			// type
			data = fldr.GetDetailsOf(items, 2);
			if (data)
				text += "<br>" + data;

			// date
			data = fldr.GetDetailsOf(items, 3);
			if (data)
				text += "<br><br>" + fldr.GetDetailsOf(null, 3) + ":<br>" + data;

			// size?
			size = FileList.SelectedItems().Item(0).Size;
			if (size)
				if (size < 1000)
					text += "<br><br>" + L_Size_Text + size + L_Bytes_Text;
				else {
					data = fldr.GetDetailsOf(items, 1);
					if (data)
						text += "<br><br>" + fldr.GetDetailsOf(null, 1) + ": " + data;
					else
						text += "<br><br>" + L_Size_Text + FormatNumber(size.toString()) + L_Bytes_Text;
				}

			// extra details?
			for (i = 4; i < 10; i++) {
				title = fldr.GetDetailsOf(null, i);
				if (!title)
					break;
				data = fldr.GetDetailsOf(items, i);
				if (title == L_Attributes_Text) {
					var code;
					var s = "";

					text += "<br><br>" + title.link("JavaScript:onClick=Properties()") + ": ";
					for (i = 0; i < 6; i++) {
						code = L_Codes_Text.charAt(i);
						if (data.indexOf(code) > -1) {
							if (s)
								s += ", ";
							if (i == 0)
								s += L_ReadOnly_Text;
							else if (i == 1)
								s += L_Hidden_Text;
							else if (i == 2)
								s += L_System_Text;
							else if (i == 3)
								s += L_Archive_Text;
							else if (i == 4)
								s += L_Compressed_Text;
							else if (i == 5)
								s += L_Encrypted_Text;
						}
					}
					if (!s)
						s = L_NoAttributes_Text;
					text += s;
				}
				else if (data)
					text += "<br><br>" + title + ":<br>" + data;
			}

			// tip?
			data = fldr.GetDetailsOf(items, -1);
			if (data && data != name) {
				var start;
				var end;
				var theLink;
				var a;

				// parse lines for Office files without breaking links below
				a = data.split("\n");
				data = a.join("<br>\n");

				// look for embedded links
				text += "<br><br>";
				start = data.indexOf("http://");
				if (start < 0)
					start = data.indexOf("file://");
				if (start < 0)
					text += data;
				else {
					end = data.indexOf(" ", start);
					if (end < 0)
						end = data.length;
					if (start > 0)
						text += data.substring(0, start - 1);
					theLink = data.substring(start, end);
					text += theLink.link(theLink);
					if (end < data.length)
						text += data.substring(end + 1, data.length);
				}
			}

			// replace Info with the new text
			Info.innerHTML = text;

			if (wantMedia && size) {
				// show media preview or thumbnail based on file extension
				ext = name.substring(name.lastIndexOf(".") + 1, name.length);
				ext = ext.toLowerCase();		
				if (ext == 'avi' || ext == 'mov' || ext == 'qt' || ext == 'mpe' || ext == 'mpeg' || ext == 'mpg') {
					// show a movie player
					document.all.Media.innerHTML = '<object ID="Player" style="width: 160px; height: 148px" classid=clsid:05589FA1-C356-11CE-BF01-00AA0055595A><param name="FileName" value="' + items.Path + '"><param name=ShowDisplay value=0><param name=BorderStyle value=0></object>';
				} else if (ext == 'aif' || ext == 'aifc' || ext == 'aiff' || ext == 'au' || ext == 'mid' || ext == 'rmi' || ext == 'snd' || ext == 'wav') {
					// show a sound player
					document.all.Media.innerHTML = '<object ID="Player" style="width: 160px; height: 28px" classid=clsid:05589FA1-C356-11CE-BF01-00AA0055595A><param name="FileName" value="' + items.Path + '"><param name=ShowDisplay value=0></center></object>'
				}
			}
			
			// try to generate a new thumbnail asynchronously, and delay the status message one second
			if (size && (size < 10000000) && Thumbnail.displayFile(items.Path))
				timer = window.setTimeout('document.all.Status.style.display = ""', 1000);
		</script>

		<script language="JavaScript" for="Thumbnail" event="OnThumbnailReady">
			// when a valid thumbnail has been generated, display it
			window.clearTimeout(timer);
			timer = 0;
			document.all.Status.style.display = "none";
			if (document.all.Thumbnail.haveThumbnail() && document.all.Media.innerHTML == "")
				document.all.Thumbnail.style.display = "";
		</script>
	</head>

	<body scroll=no onload="Init()">

		<!-- start mini banner -->
		<div ID="MiniBanner" style="visibility: hidden; position: absolute; width: 100%; height: 32px; background: window">
			<!-- using a table with nowrap to prevent word wrapping -->
			<table><tr><td nowrap>
				<p class=Title style="margin-top: 0">
				<!--webbot bot="HTMLMarkup" startspan alt="&lt;B&gt;&lt;I&gt;Web View Folder Title&lt;/I&gt;&lt;/B&gt;&nbsp;" -->
				%THISDIRNAME%
				<!--webbot bot="HTMLMarkup" endspan -->
			</td></tr></table>
		</div>
		<!-- end mini banner -->

		<!-- start left info panel -->
		<div id=Panel style="background: white URL(file://%TEMPLATEDIR%\wvleft.bmp) no-repeat">
			<p>
			<object classid="clsid:E5DF9D10-3B52-11D1-83E8-00A0C90DC849" width=32 height=32>
				<param name="scale" value=100>
			</object>

			<p class=Title>
			<!--webbot bot="HTMLMarkup" startspan alt="&lt;B&gt;&lt;I&gt;Web View Folder Title&lt;/I&gt;&lt;/B&gt;&nbsp;" -->
			%THISDIRNAME%
			<!--webbot bot="HTMLMarkup" endspan -->
			
			<p class=LogoLine>
			<img src="%TEMPLATEDIR%\wvline.gif" width=100% height=1px>
			
			<p>
			<span id=Info>
			</span>

			<!-- HERE'S A GOOD PLACE TO ADD A FEW LINKS OF YOUR OWN -->
			<!-- (examples commented out)
				<p>
				<br>
				<a href="http://www.mylink1.com/">Custom Link 1</a>
				<p class=Links>
				<a href="http://www.mylink2.com/">Custom Link 2</a>
			-->

			<p>
			<!-- this is the thumbnail viewer control -->
			<object id=Thumbnail classid="clsid:1D2B4F40-1F10-11D1-9E88-00C04FDCAB92" style="display: none">
			</object>

			<!-- this is the status message that pops up during thumbnail generation -->
			<div id=Status style="display: none">
				Generating preview...
			</div>

			<p>
			<!-- this contains any ActiveMovie control created later -->
			<div id=Media>
			</div>
			
		</div>
		<!-- end left info panel -->

		<!-- this is the standard file list control -->
		<!-- webbot bot="HTMLMarkup" startspan u-src="file:///C:\Program Files\Microsoft FrontPage Express\Data\FoldData.gif" -->
		<object id=FileList border=0 tabindex=1 classid="clsid:1820FED0-473E-11D0-A96C-00C04FD705A2">
		</object>
		<!-- webbot bot="HTMLMarkup" endspan -->

	</body>
</html>
